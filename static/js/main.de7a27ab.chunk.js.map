{"version":3,"sources":["Board/Calc.js","Board/engine.js","Board/Infrastructure.js","enums.js","common/index.js","Board/index.js","Meta/PlayerData.js","Meta/index.js","PlayGameStyled.js","GamePlay.js","App.js","serviceWorker.js","index.js"],"names":["Calc","w","h","verticals","_","flatten","range","map","x","y","i","horisontals","diagDown","diagUp","cell","board","length","messageList","Engine","params","factor","n","series","this","win","blockLose","have2WaysToWin","block2WaysToLose","takeSmartStep","bestChoise","getBestChoise","appendToColumn","mark","message","sample","excludedColumns","scores","getScoreForPosition","aiLevel","console","log","maxBy","getAvailableColumns","isRoot","stateScores","results","columnsRange","onFillColumn","lastCell","getLastCellAsString","won","lost","stateScore","stateScoresForFurtherDeep","sort","a","b","slice","result","includes","toggleMark","Infinity","sum","filter","sumBy","counterByMark","opponentMark","fn","every","maxHeight","res","removeFromColumn","find","findStepMatching","undefined","canWinCell","canLoseCell","winningCell","losingCell","takeAction","canLose","onEveryAvailableStep","canWin","cellsToLose","findStepsMatching","cellsToBlock","boardColumns","boardRows","aiMark","refs","Object","assign","formSeries","markCountersBySeries","Map","countBy","c","get","seriesByCell","groupBy","stringifyCell","group","mapValues","seriesArr","reduce","unitedMapByCell","currMapByCell","keys","forEach","key","push","col","lastColumn","pop","wonByMark","some","isColumnFull","PlayerType","uiConstants","messageBoxHeightArithmetic","fontPixels","messageBoxFontArithmetic","styled","div","padding","Player","Board","props","state","currentPlayer","setup","meta","firstMark","secondMark","basicInfo","engineFirst","first","level","engineSecond","second","window","engine","userSteps","height","width","restart","isGameOver","currentEngine","nextPlayer","isTie","isCurrentPlayerType","setTimeout","takeStep","setState","onMessage","nextEngine","style","backgroundColor","display","gridTemplateColumns","gridTemplateRows","gridRowGap","gridColumnGap","rangeRight","color","random","border","borderRadius","background","Cell","flat","button","type","isLastColumn","currentColor","currentMark","fontWeight","fontSize","onClick","React","Component","options","value","label","TextDiv","children","minWidth","ComponentDiv","FlexDiv","alignItems","PlayerData","data","turn","onChange","currVal","option","textAlign","fontFamily","paddingTop","min","max","dots","Meta","onRestart","margin","paddingBottom","PlayGameContianer","MessageAndBoardContainer","MessageBox","Message","p","GamePlay","atLeastOneHumanPlayer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de7a27ab.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport default class Calc {\n  static formSeries(w, h) {\n    const verticals = _.flatten(\n      _.range(w).map(x =>\n        _.range(h - (4 - 1)).map(y => _.range(4).map(i => ({ x, y: y + i })))\n      )\n    );\n    const horisontals = _.flatten(\n      _.range(h).map(y =>\n        _.range(w - (4 - 1)).map(x => _.range(4).map(i => ({ x: x + i, y })))\n      )\n    );\n    const diagDown = _.flatten(\n      _.range(0, h - (4 - 1)).map(y =>\n        _.range(w - (4 - 1)).map(x =>\n          _.range(4).map(i => ({ x: x + i, y: y + i }))\n        )\n      )\n    );\n    const diagUp = _.flatten(\n      _.range(0, h - (4 - 1)).map(y =>\n        _.range(w - (4 - 1)).map(x =>\n          _.range(4).map(i => ({ x: x + i, y: 4 - 1 + y - i }))\n        )\n      )\n    );\n\n    const series = [...verticals, ...horisontals, ...diagDown, ...diagUp];\n    return series;\n  }\n\n  static stringifyCell(cell: { x: Number, y: Number }) {\n    return `${cell.x},${cell.y}`;\n  }\n\n  static getLastCellAsString(board: string[][], i) {\n    const x = i;\n    const y = board[i].length - 1;\n    return `${x},${y}`;\n  }\n}\n","import _ from 'lodash';\nimport Calc from './Calc';\nimport Infrastructure from './Infrastructure';\n\nconst messageList = [\n  'Give me your best shot!',\n  'you like that?',\n  'Failed to see this coming, ha?',\n  'Come on, show me what you got!'\n];\n\nexport default class Engine extends Infrastructure {\n  constructor(params) {\n    super(params);\n\n    this.factor = n => n ** this.board.length + this.series.length * 2;\n  }\n\n  takeStep() {\n    this.win() ||\n      this.blockLose() ||\n      this.have2WaysToWin() ||\n      this.block2WaysToLose() ||\n      this.takeSmartStep();\n  }\n\n  takeSmartStep() {\n    const bestChoise = this.getBestChoise();\n    this.appendToColumn(bestChoise, this.mark);\n    this.message = _.sample(messageList);\n  }\n\n  /** @returns {number} The index of the best column to choose */\n  getBestChoise(excludedColumns = []) {\n    const scores = this.getScoreForPosition(this.aiLevel, this.mark, true);\n    console.log(scores);\n    return _.maxBy(this.getAvailableColumns(excludedColumns), i => scores[i]);\n  }\n\n  getScoreForPosition(n, mark, isRoot = false) {\n    const stateScores = [];\n    const results = this.columnsRange.map(i =>\n      this.onFillColumn(i, mark, () => {\n        const lastCell = Calc.getLastCellAsString(this.board, i);\n        if (this.won(lastCell)) {\n          return 1;\n        }\n        if (this.lost(lastCell)) {\n          return -1;\n        }\n\n        const stateScore = this.stateScore();\n        stateScores[i] = stateScore;\n        return 0;\n      })\n    );\n\n    const stateScoresForFurtherDeep = [...stateScores]\n      .sort((a, b) => (mark === this.mark ? b - a : a - b))\n      .slice(0, 3);\n\n    const scores = results.map((result, i) => {\n      return this.onFillColumn(i, mark, () => {\n        if (result === 1) return this.factor(n);\n        if (result === -1) return -this.factor(n);\n\n        if (n === 1) {\n          return stateScores[i];\n        } else if (!stateScoresForFurtherDeep.includes(stateScores[i])) {\n          return -Infinity;\n        } else {\n          return this.getScoreForPosition(n - 1, this.toggleMark(mark));\n        }\n      });\n    });\n\n    return isRoot ? scores : _.sum(scores.filter(n => n !== -Infinity));\n  }\n\n  stateScore() {\n    return (\n      _.sumBy(\n        this.series.filter(\n          counterByMark =>\n            counterByMark[this.mark] > 0 &&\n            counterByMark[this.opponentMark] === 0\n        ),\n        counterByMark => counterByMark[this.mark]\n      ) -\n      _.sumBy(\n        this.series.filter(\n          counterByMark =>\n            counterByMark[this.mark] === 0 &&\n            counterByMark[this.opponentMark] > 0\n        ),\n        counterByMark => counterByMark[this.opponentMark]\n      )\n    );\n  }\n\n  onEveryAvailableStep(mark, fn) {\n    return this.columnsRange.every(i => {\n      if (this.board[i].length === this.maxHeight) return true;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n  findStepMatching(mark, fn) {\n    return this.columnsRange.find(i => {\n      if (this.board[i].length === this.maxHeight) return false;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n\n  findStepsMatching(mark, fn) {\n    return this.columnsRange.filter(i => {\n      if (this.board[i].length === this.maxHeight) return false;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n\n  canWinCell() {\n    return this.findStepMatching(this.mark, () => this.won());\n  }\n  canWin() {\n    return this.canWinCell() !== undefined;\n  }\n\n  canLoseCell() {\n    return this.findStepMatching(this.opponentMark, () => this.lost());\n  }\n  canLose() {\n    return this.canLoseCell() !== undefined;\n  }\n\n  win() {\n    const winningCell = this.canWinCell();\n\n    if (winningCell !== undefined) {\n      this.appendToColumn(winningCell, this.mark);\n      this.message = 'Got ya!';\n    }\n\n    return winningCell !== undefined;\n  }\n\n  blockLose() {\n    const losingCell = this.canLoseCell();\n\n    if (losingCell !== undefined) {\n      this.appendToColumn(losingCell, this.mark);\n      this.message = 'Blocked ya!';\n    }\n\n    return losingCell !== undefined;\n  }\n\n  have2WaysToWin(takeAction = true) {\n    const cell = this.findStepMatching(\n      this.mark,\n      () =>\n        !this.canLose() &&\n        this.onEveryAvailableStep(this.opponentMark, () => this.canWin())\n    );\n\n    if (cell !== undefined && takeAction) {\n      this.appendToColumn(cell, this.mark);\n      this.message = 'Got ya in 2 ways!';\n    }\n\n    return cell !== undefined;\n  }\n\n  block2WaysToLose() {\n    // const cellsToLose = this.findStepsMatching(this.mark, () =>\n    //   this.onSwitchedMarks(() => this.have2WaysToWin(false))\n    // );\n    const cellsToLose = this.findStepsMatching(\n      this.mark,\n      () =>\n        this.findStepMatching(\n          this.opponentMark,\n          () =>\n            !this.canWin() &&\n            this.onEveryAvailableStep(this.mark, () => this.canLose())\n        ) !== undefined\n    );\n\n    // if only one option is forbidden - it's obvious for deep AI.\n    if (cellsToLose.length > 1) {\n      const cellsToBlock = this.getAvailableColumns(cellsToLose);\n      console.log({ cellsToBlock, cellsToLose });\n\n      if (cellsToBlock.length === 0) return false;\n\n      const cell = this.getBestChoise(cellsToLose);\n      this.appendToColumn(cell, this.mark);\n      this.message = 'Blocked ya from 2 ways!';\n    }\n\n    return cellsToLose.length > 1;\n  }\n}\n","import _ from 'lodash';\nimport Calc from './Calc';\n\nexport default class Infrastructure {\n  constructor(params) {\n    const {\n      boardColumns,\n      board,\n      boardRows,\n      aiMark,\n      opponentMark,\n      aiLevel,\n      refs\n    } = params;\n\n    /** @type {string[][]} */\n    this.board = board || _.range(boardColumns).map(i => []);\n    /** @type {number} */\n    this.maxHeight = boardRows;\n    /** @type {string} */\n    this.mark = aiMark;\n    /** @type {string} */\n    this.opponentMark = opponentMark;\n    /** @type {number} */\n    this.aiLevel = aiLevel;\n\n    if (refs) {\n      Object.assign(this, refs);\n    } else {\n      const series = Calc.formSeries(this.board.length, this.maxHeight);\n\n      const markCountersBySeries = new Map(\n        series.map(series => [\n          series,\n          {\n            [this.mark]: 0,\n            [this.opponentMark]: 0,\n            ..._.countBy(series, c => this.board[c.x][c.y])\n          }\n        ])\n      );\n\n      this.series = series.map(series => markCountersBySeries.get(series));\n\n      this.seriesByCell = _.range(4)\n        .map(i => _.groupBy(series, series => Calc.stringifyCell(series[i])))\n        .map(group =>\n          _.mapValues(group, seriesArr =>\n            seriesArr.map(series => markCountersBySeries.get(series))\n          )\n        )\n        // _.merge but keep original pointers\n        .reduce((unitedMapByCell, currMapByCell) => {\n          Object.keys(currMapByCell).forEach(key => {\n            if (key in unitedMapByCell) {\n              unitedMapByCell[key].push(...currMapByCell[key]);\n            } else {\n              unitedMapByCell[key] = currMapByCell[key];\n            }\n          });\n          return unitedMapByCell;\n        }, {});\n    }\n\n    this.columnsRange = _.range(this.board.length);\n  }\n\n  /** @param {number} col */\n  appendToColumn(col, mark) {\n    this.board[col].push(mark);\n    this.lastColumn = col;\n    this.seriesByCell[Calc.getLastCellAsString(this.board, col)].forEach(\n      counterByMark => counterByMark[mark]++\n    );\n  }\n\n  /** @param {number} col */\n  removeFromColumn(col, mark) {\n    this.seriesByCell[Calc.getLastCellAsString(this.board, col)].forEach(\n      counterByMark => counterByMark[mark]--\n    );\n    this.board[col].pop();\n  }\n\n  isTie() {\n    return this.board.every(col => col.length === this.maxHeight);\n  }\n\n  won(lastCell) {\n    return this.wonByMark(lastCell, this.mark);\n  }\n  lost(lastCell) {\n    return this.wonByMark(lastCell, this.opponentMark);\n  }\n\n  wonByMark(lastCell, mark) {\n    if (lastCell) {\n      return this.seriesByCell[lastCell].some(\n        counterByMark => counterByMark[mark] === 4\n      );\n    } else {\n      return this.series.some(counterByMark => counterByMark[mark] === 4);\n    }\n  }\n\n  toggleMark(mark) {\n    return mark === this.mark ? this.opponentMark : this.mark;\n  }\n\n  onFillColumn(i, mark, fn) {\n    if (this.isColumnFull(i)) {\n      return 0;\n    }\n    this.appendToColumn(i, mark);\n    const res = fn();\n    this.removeFromColumn(i, mark);\n    return res;\n  }\n\n  isColumnFull(i) {\n    return this.board[i].length === this.maxHeight;\n  }\n\n  onSwitchedMarks(fn) {\n    [this.mark, this.opponentMark] = [this.opponentMark, this.mark];\n    const res = fn();\n    [this.mark, this.opponentMark] = [this.opponentMark, this.mark];\n    return res;\n  }\n\n  getAvailableColumns(excludedColumns = []) {\n    return this.columnsRange.filter(\n      i => !excludedColumns.includes(i) && this.board[i].length < this.maxHeight\n    );\n  }\n}\n","export const PlayerType = {\n  AI: 1,\n  HUMAN: 2\n};\n","const fontPixels = 5;\nexport const uiConstants = {\n  messageBoxHeightArithmetic: `${fontPixels + 5}px + 2vmin`,\n  messageBoxFontArithmetic: `${fontPixels}px + 2vmin`\n};\n","import React from 'react';\nimport Engine from './engine';\nimport _ from 'lodash';\nimport { PlayerType } from '../enums';\nimport { uiConstants } from '../common';\nimport styled from 'styled-components/macro';\n\nconst padding = 10;\n\nstyled.div`\n  width: calc(100% - ${padding * 2}px),\n  height: calc(100% - ${padding * 2}px - (${\n  uiConstants.messageBoxHeightArithmetic\n})),\n  backgroundColor: #7f7878,\n  display: grid,\n  gridTemplateColumns: repeat(7, 1fr),\n  gridTemplateRows: repeat(7, 1fr),\n  gridRowGap: 10,\n  gridColumnGap: 10,\n  padding: ${padding}\n`;\n\nconst Player = {\n  FIRST: 1,\n  SECOND: 2\n};\n\ntype Props = {\n  meta: {\n    first: { type: Number, level?: Number },\n    second: { type: Number, level?: Number }\n  },\n  board: String[][]\n};\n\nexport default class Board extends React.Component<Props> {\n  state = { currentPlayer: Player.FIRST };\n\n  constructor(props) {\n    super(props);\n    this.setup();\n  }\n\n  setup() {\n    const { meta, board } = this.props;\n    this.firstMark = 'x';\n    this.secondMark = 'o';\n\n    this.meta = meta;\n\n    const basicInfo = {\n      board: board || _.range(7).map(i => []),\n      boardColumns: 7,\n      boardRows: 6\n    };\n    this.engineFirst = new Engine({\n      ...basicInfo,\n      opponentMark: this.secondMark,\n      aiMark: this.firstMark,\n      aiLevel: meta.first.level\n    });\n    this.engineSecond = new Engine({\n      ...basicInfo,\n      opponentMark: this.firstMark,\n      aiMark: this.secondMark,\n      aiLevel: meta.second.level,\n      refs: {\n        series: this.engineFirst.series,\n        seriesByCell: this.engineFirst.seriesByCell\n      }\n    });\n\n    window.engine = this.engineSecond;\n    window._ = _;\n    window.userSteps = this.userSteps = [];\n\n    this.height = basicInfo.boardRows;\n    this.board = this.engineFirst.board;\n    this.width = basicInfo.boardColumns;\n    // eslint-disable-next-line react/no-direct-mutation-state\n    this.state = { currentPlayer: Player.FIRST };\n  }\n\n  render() {\n    if (this.meta !== this.props.meta) {\n      this.restart();\n    }\n\n    let isGameOver = false;\n    if (this.currentEngine.lost()) {\n      console.log(`Player ${this.nextPlayer()} Won!`);\n      isGameOver = true;\n    } else if (this.currentEngine.isTie()) {\n      console.log(`It's a Tie!`);\n      isGameOver = true;\n    } else if (this.isCurrentPlayerType(PlayerType.AI)) {\n      setTimeout(() => {\n        this.currentEngine.takeStep();\n        this.setState({ currentPlayer: this.nextPlayer() });\n        this.props.onMessage(this.nextEngine.message);\n      }, 0);\n    }\n\n    return (\n      <div\n        style={{\n          width: 'calc(100% - 20px)', // 100% - padding\n          height: 'calc(100% - 20px - 15px - 2vmin)', // 100% - padding - top dock\n          backgroundColor: '#7f7878',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          gridTemplateRows: 'repeat(7, 1fr)',\n          gridRowGap: 10,\n          gridColumnGap: 10,\n          padding: 10\n        }}\n      >\n        {_.rangeRight(this.height)\n          .map(i => this.board.map(col => Cell(col[i])))\n          .flat()}\n        {_.range(this.width).map(i =>\n          this.button(i, isGameOver, this.nextEngine.lastColumn === i)\n        )}\n      </div>\n    );\n  }\n\n  restart() {\n    this.setup();\n  }\n\n  isCurrentPlayerType(n) {\n    const { currentPlayer } = this.state;\n\n    return currentPlayer === Player.FIRST\n      ? this.meta.first.type === n\n      : this.meta.second.type === n;\n  }\n\n  get currentEngine() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST\n      ? this.engineFirst\n      : this.engineSecond;\n  }\n\n  get nextEngine() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST\n      ? this.engineSecond\n      : this.engineFirst;\n  }\n\n  get currentMark() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST ? this.firstMark : this.secondMark;\n  }\n\n  button(i, isGameOver, isLastColumn) {\n    const currentColor = this.currentMark === 'x' ? 'blue' : 'red';\n\n    return (\n      <button\n        style={{\n          borderRadius: '10px',\n          background: isGameOver\n            ? `repeating-linear-gradient(45deg, black, ${currentColor} 100%)`\n            : isLastColumn\n            ? `repeating-linear-gradient(45deg, ${currentColor}, transparent 100%)`\n            : 'repeating-linear-gradient(45deg, black, transparent 100%)',\n          color: 'white',\n          fontWeight: 'bold',\n          fontSize: '2.7vw'\n        }}\n        key={i}\n        onClick={() => {\n          if (!isGameOver && this.board[i].length < this.height) {\n            if (this.isCurrentPlayerType(PlayerType.HUMAN)) {\n              this.userSteps.push(i);\n              this.currentEngine.appendToColumn(i, this.currentMark);\n              this.setState({ currentPlayer: this.nextPlayer() });\n            }\n          }\n        }}\n      >\n        {i + 1}\n      </button>\n    );\n  }\n\n  nextPlayer() {\n    return 3 - this.state.currentPlayer;\n  }\n}\n\nfunction Cell(mark) {\n  const color = mark === 'x' ? 'red' : 'blue';\n  return (\n    <div\n      key={_.random(1e9)}\n      style={{\n        border: mark ? `0.9vw solid ${color}` : 'none',\n        borderRadius: '100%',\n        background: mark\n          ? mark === 'x'\n            ? `radial-gradient(circle, red 60%,transparent 100%)`\n            : `radial-gradient(circle, blue 60%, violet 90%)`\n          : 'gray'\n      }}\n    ></div>\n  );\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { PlayerType } from '../enums';\n\nconst options = [\n  { value: PlayerType.HUMAN, label: 'Human' },\n  { value: PlayerType.AI, label: 'AI' }\n];\n\nconst DEFAULT_LEVEL = 7;\n\nfunction TextDiv({ children }) {\n  return <div style={{ minWidth: 120 }}>{children}</div>;\n}\nfunction ComponentDiv({ children }) {\n  return <div style={{ minWidth: 200, color: 'black' }}>{children}</div>;\n}\nfunction FlexDiv({ children }) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n  );\n}\n\ntype PlayerMeta = {\n  type: Number,\n  level: Number\n};\n\ntype Props = {\n  data: PlayerMeta,\n  turn: String,\n  onChange: (data: PlayerMeta) => void\n};\n\nexport default function PlayerData({ data, turn, onChange }: Props) {\n  const currVal = options.find(option => option.value === data.type);\n  return (\n    <div\n      style={{\n        textAlign: 'left',\n        padding: 20,\n        fontFamily: 'arial'\n      }}\n    >\n      <FlexDiv>\n        <TextDiv>\n          <span>{turn + ' Player:'}</span>\n        </TextDiv>\n        <ComponentDiv>\n          <Select\n            // theme={theme => ({\n            //   ...(console.log(theme) || theme),\n            //   // borderRadius: 0,\n            //   colors: {\n            //     ...Object.fromEntries(\n            //       Object.entries(theme.colors).map(([k, v]) => [k, '#7f7878'])\n            //     ),\n            //     text: 'white',\n            //     primary: '#7f7878',\n            //     primary25: '#7f7878'\n            //   }\n            // })}\n            value={currVal}\n            onChange={type =>\n              onChange({ type: type.value, level: data.level || DEFAULT_LEVEL })\n            }\n            options={options}\n          />\n        </ComponentDiv>\n      </FlexDiv>\n      {currVal.value === PlayerType.AI && (\n        <div style={{ paddingTop: 10 }}>\n          <FlexDiv>\n            <TextDiv>\n              <label>Level: </label>\n            </TextDiv>\n            <ComponentDiv>\n              <Slider\n                // style={{ backgroundColor: '#7f7878', color: 'white' }}\n                min={1}\n                max={8}\n                value={data.level || DEFAULT_LEVEL}\n                dots={true}\n                onChange={level => onChange({ type: data.type, level })}\n              />\n            </ComponentDiv>\n          </FlexDiv>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PlayerData from './PlayerData';\n\nexport default class Meta extends React.Component {\n  constructor(props) {\n    super(props);\n    const { first, second } = this.props;\n    this.state = {\n      first,\n      second\n    };\n  }\n\n  render() {\n    const { first, second } = this.state;\n    const { onChange, onRestart } = this.props;\n\n    return (\n      <div\n        style={{\n          margin: 20,\n          backgroundColor: '#7f7878',\n          display: 'grid',\n          gridTemplateColumns: 'min-content',\n          borderRadius: '30px',\n          color: 'white',\n          fontWeight: 'bold'\n        }}\n      >\n        <PlayerData\n          data={first}\n          turn={'First'}\n          onChange={first =>\n            this.setState({ ...this.state, first }) &&\n            onChange({ first, second })\n          }\n        />\n        <PlayerData\n          data={second}\n          turn={'Second'}\n          onChange={second =>\n            this.setState({ ...this.state, second }) &&\n            onChange({ first, second })\n          }\n        />\n\n        <button\n          style={{\n            margin: 20,\n            paddingTop: 10,\n            paddingBottom: 10,\n            fontSize: 25,\n            fontFamily: 'arial',\n            fontWeight: 'bold',\n            color: 'white',\n            background:\n              'repeating-linear-gradient(45deg, transparent, black, transparent 100%)',\n            borderRadius: 15\n          }}\n          onClick={() => onRestart({ ...this.state })}\n        >\n          Restart\n        </button>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components/macro';\nimport { uiConstants } from './common';\n\nexport const PlayGameContianer = styled.div`\n  text-align: center;\n  margin: auto;\n  background-color: #282c34;\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst [width, minWidth, maxWidth] = ['40vmax', '300px', '600px'];\nexport const MessageAndBoardContainer = styled.div`\n  width: ${width};\n  height: calc(${width} + ${uiConstants.messageBoxHeightArithmetic});\n  min-width: ${minWidth};\n  min-height: calc(${minWidth} + ${uiConstants.messageBoxHeightArithmetic});\n  max-width: ${maxWidth};\n  max-height: calc(${maxWidth} + ${uiConstants.messageBoxHeightArithmetic});\n  padding: 10px;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 10px 0;\n  width: 100%;\n  font-size: calc(${uiConstants.messageBoxFontArithmetic});\n  min-height: calc(${uiConstants.messageBoxHeightArithmetic});\n`;\n\nexport const Message = styled.p`\n  margin: 0 0;\n  color: white;\n  font-weight: bold;\n  min-height: calc(${uiConstants.messageBoxFontArithmetic});\n`;\n","import React from 'react';\n\nimport Board from './Board';\nimport Meta from './Meta';\nimport { PlayerType } from './enums';\n\nimport {\n  PlayGameContianer,\n  MessageAndBoardContainer,\n  MessageBox,\n  Message\n} from './PlayGameStyled';\n\nexport default class GamePlay extends React.Component {\n  state = {\n    meta: {\n      first: { type: PlayerType.HUMAN },\n      second: { type: PlayerType.AI, level: 7 }\n    },\n    message: ''\n  };\n\n  render() {\n    const { message, meta } = this.state;\n\n    return (\n      <PlayGameContianer>\n        <MessageAndBoardContainer>\n          <MessageBox>\n            <Message>{message}</Message>\n          </MessageBox>\n          <Board\n            meta={meta}\n            onMessage={message =>\n              this.atLeastOneHumanPlayer() &&\n              this.setState({ ...this.state, message })\n            }\n          />\n        </MessageAndBoardContainer>\n        <Meta\n          first={meta.first}\n          second={meta.second}\n          onChange={meta => {}}\n          onRestart={meta => this.setState({ meta, message: null })}\n        />\n      </PlayGameContianer>\n    );\n  }\n\n  atLeastOneHumanPlayer() {\n    const { first, second } = this.state.meta;\n    return first.type === PlayerType.HUMAN || second.type === PlayerType.HUMAN;\n  }\n}\n","import React from 'react';\nimport GamePlay from './GamePlay';\n\nfunction App() {\n  return <GamePlay />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}