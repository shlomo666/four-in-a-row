{"version":3,"sources":["Board/Calc.js","Board/engine.js","Board/Infrastructure.js","enums.js","common/index.js","Board/index.js","Meta/PlayerData.js","Meta/index.js","PlayGameStyled.js","GamePlay.js","App.js","serviceWorker.js","index.js"],"names":["Calc","w","h","verticals","_","flatten","range","map","x","y","i","horisontals","diagDown","diagUp","cell","board","length","messageList","Engine","params","boardRange","this","win","blockLose","have2WaysToWin","block2WaysToLose","takeSmartStep","bestChoise","getBestChoise","appendToColumn","mark","message","sample","scores","getScoreForPosition","aiLevel","maxBy","filter","maxHeight","n","isRoot","stateScores","results","wrapFillColumnTemp","lastCell","getLastCellAsString","won","lost","stateScore","stateScoresForFurtherDeep","sort","a","b","slice","result","factor","includes","toggleMark","Infinity","sum","sumBy","series","counterByMark","opponentMark","fn","every","res","removeFromColumn","find","findStepMatching","undefined","canWinCell","canLoseCell","winningCell","losingCell","takeAction","canLose","everyStepMatching","canWin","boardColumns","boardRows","aiMark","refs","Object","assign","formSeries","basicCounter","markCountersBySeries","Map","countBy","c","get","seriesByCell","groupBy","stringifyCell","group","fromPairs","toPairs","reduce","unitedMapByCell","currMapByCell","keys","forEach","key","push","col","lastColumn","pop","wonByMark","some","PlayerType","uiConstants","messageBoxHeightArithmetic","fontPixels","messageBoxFontArithmetic","styled","div","padding","Player","Board","props","state","currentPlayer","setup","meta","firstMark","secondMark","basicInfo","engineFirst","first","level","engineSecond","second","window","engine","userSteps","height","width","restart","isGameOver","currentEngine","console","log","nextPlayer","isTie","isCurrentPlayerType","setTimeout","takeStep","setState","onMessage","nextEngine","style","backgroundColor","display","gridTemplateColumns","gridTemplateRows","gridRowGap","gridColumnGap","rangeRight","color","random","border","borderRadius","background","Cell","flat","button","type","isLastColumn","currentColor","currentMark","fontWeight","fontSize","onClick","React","Component","options","value","label","TextDiv","children","minWidth","ComponentDiv","FlexDiv","alignItems","PlayerData","data","turn","onChange","currVal","option","textAlign","fontFamily","paddingTop","min","max","dots","Meta","onRestart","margin","paddingBottom","PlayGameContianer","MessageAndBoardContainer","MessageBox","Message","p","GamePlay","atLeastOneHumanPlayer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b0ffcf0.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport default class Calc {\n  static formSeries(w, h) {\n    const verticals = _.flatten(\n      _.range(w).map(x =>\n        _.range(h - (4 - 1)).map(y => _.range(4).map(i => ({ x, y: y + i })))\n      )\n    );\n    const horisontals = _.flatten(\n      _.range(h).map(y =>\n        _.range(w - (4 - 1)).map(x => _.range(4).map(i => ({ x: x + i, y })))\n      )\n    );\n    const diagDown = _.flatten(\n      _.range(0, h - (4 - 1)).map(y =>\n        _.range(w - (4 - 1)).map(x =>\n          _.range(4).map(i => ({ x: x + i, y: y + i }))\n        )\n      )\n    );\n    const diagUp = _.flatten(\n      _.range(0, h - (4 - 1)).map(y =>\n        _.range(w - (4 - 1)).map(x =>\n          _.range(4).map(i => ({ x: x + i, y: 4 - 1 + y - i }))\n        )\n      )\n    );\n\n    const series = [...verticals, ...horisontals, ...diagDown, ...diagUp];\n    return series;\n  }\n\n  static stringifyCell(cell: { x: Number, y: Number }) {\n    return `${cell.x},${cell.y}`;\n  }\n\n  static getLastCellAsString(board: string[][], i) {\n    const x = i;\n    const y = board[i].length - 1;\n    return `${x},${y}`;\n  }\n}\n","import _ from 'lodash';\nimport Calc from './Calc';\nimport Infrastructure from './Infrastructure';\n\nconst messageList = [\n  'Give me your best shot!',\n  'you like that?',\n  'Failed to see this coming, ha?',\n  'Come on, show me what you got!'\n];\n\nexport default class Engine extends Infrastructure {\n  constructor(params) {\n    super(params);\n\n    this.boardRange = _.range(this.board.length);\n  }\n\n  takeStep() {\n    this.win() ||\n      this.blockLose() ||\n      this.have2WaysToWin() ||\n      this.block2WaysToLose() ||\n      this.takeSmartStep();\n  }\n\n  takeSmartStep() {\n    const bestChoise = this.getBestChoise();\n    this.appendToColumn(bestChoise, this.mark);\n    this.message = _.sample(messageList);\n  }\n\n  /** @returns {number} The index of the best column to choose */\n  getBestChoise() {\n    const scores = this.getScoreForPosition(this.aiLevel, this.mark, true);\n    return _.maxBy(\n      _.range(this.board.length).filter(\n        i => this.board[i].length < this.maxHeight\n      ),\n      i => scores[i]\n    );\n  }\n\n  getScoreForPosition(n, mark, isRoot = false) {\n    const stateScores = [];\n    const results = _.range(this.board.length).map(i =>\n      this.wrapFillColumnTemp(i, mark, () => {\n        const lastCell = Calc.getLastCellAsString(this.board, i);\n        if (this.won(lastCell)) {\n          return 1;\n        }\n        if (this.lost(lastCell)) {\n          return -1;\n        }\n\n        const stateScore = this.stateScore();\n        stateScores[i] = stateScore;\n        return 0;\n      })\n    );\n\n    const stateScoresForFurtherDeep = [...stateScores]\n      .sort((a, b) => (mark === this.mark ? b - a : a - b))\n      .slice(0, 4);\n\n    const scores = results.map((result, i) => {\n      return this.wrapFillColumnTemp(i, mark, () => {\n        if (result === 1) return this.factor(n);\n        if (result === -1) return -this.factor(n);\n\n        if (n === 1) {\n          return stateScores[i];\n        } else if (!stateScoresForFurtherDeep.includes(stateScores[i])) {\n          return -Infinity;\n        } else {\n          return this.getScoreForPosition(n - 1, this.toggleMark(mark));\n        }\n      });\n    });\n\n    return isRoot ? scores : _.sum(scores.filter(n => n !== -Infinity));\n  }\n\n  stateScore() {\n    return (\n      _.sumBy(\n        this.series.filter(\n          counterByMark =>\n            counterByMark[this.mark] > 0 &&\n            counterByMark[this.opponentMark] === 0\n        ),\n        counterByMark => counterByMark[this.mark]\n      ) -\n      _.sumBy(\n        this.series.filter(\n          counterByMark =>\n            counterByMark[this.mark] === 0 &&\n            counterByMark[this.opponentMark] > 0\n        ),\n        counterByMark => counterByMark[this.opponentMark]\n      )\n    );\n  }\n\n  everyStepMatching(mark, fn) {\n    return this.boardRange.every(i => {\n      if (this.board[i].length === this.maxHeight) return true;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n  findStepMatching(mark, fn) {\n    return this.boardRange.find(i => {\n      if (this.board[i].length === this.maxHeight) return false;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n\n  findStepsMatching(mark, fn) {\n    return this.boardRange.filter(i => {\n      if (this.board[i].length === this.maxHeight) return false;\n\n      this.appendToColumn(i, mark);\n      const res = fn();\n      this.removeFromColumn(i, mark);\n      return res;\n    });\n  }\n\n  canWinCell() {\n    return this.findStepMatching(this.mark, () => this.won());\n  }\n  canWin() {\n    return this.canWinCell() !== undefined;\n  }\n\n  canLoseCell() {\n    return this.findStepMatching(this.opponentMark, () => this.lost());\n  }\n  canLose() {\n    return this.canLoseCell() !== undefined;\n  }\n\n  win() {\n    const winningCell = this.canWinCell();\n\n    if (winningCell !== undefined) {\n      this.appendToColumn(winningCell, this.mark);\n      this.message = 'Got ya!';\n    }\n\n    return winningCell !== undefined;\n  }\n\n  blockLose() {\n    const losingCell = this.canLoseCell();\n\n    if (losingCell !== undefined) {\n      this.appendToColumn(losingCell, this.mark);\n      this.message = 'Blocked ya!';\n    }\n\n    return losingCell !== undefined;\n  }\n\n  have2WaysToWin(takeAction = true) {\n    const cell = this.findStepMatching(\n      this.mark,\n      () =>\n        !this.canLose() &&\n        this.everyStepMatching(this.opponentMark, () => this.canWin())\n    );\n\n    if (cell !== undefined && takeAction) {\n      this.appendToColumn(cell, this.mark);\n      this.message = 'Got ya in 2 ways!';\n    }\n\n    return cell !== undefined;\n  }\n\n  onSwitchedMarks(fn) {\n    [this.mark, this.opponentMark] = [this.opponentMark, this.mark];\n    const res = fn();\n    [this.mark, this.opponentMark] = [this.opponentMark, this.mark];\n    return res;\n  }\n\n  block2WaysToLose() {\n    return false;\n    // const cellsToLose = this.findStepsMatching(this.mark, () =>\n    //   this.onSwitchedMarks(() => this.have2WaysToWin(false))\n    // );\n    const cellsToLose = this.findStepsMatching(this.mark, () =>\n      this.findStepMatching(\n        this.opponentMark,\n        () =>\n          !this.canWin() &&\n          this.everyStepMatching(this.mark, () => this.canLose())\n      )\n    );\n\n    if (cellsToLose.length > 0) {\n      const cellsToBlock = _.range(this.board.length).filter(\n        i => !cellsToLose.includes(i) && this.board[i].length < this.maxHeight\n      );\n      console.log({ cellsToBlock, cellsToLose });\n\n      if (cellsToBlock.length === 0) return false;\n\n      const cell = _.maxBy(cellsToBlock, cell =>\n        this.wrapFillColumnTemp(cell, this.mark, () => this.stateScore())\n      );\n      this.appendToColumn(cell, this.mark);\n      this.message = 'Blocked ya from 2 ways!';\n    }\n\n    return cellsToLose.length > 0;\n  }\n}\n","import _ from 'lodash';\nimport Calc from './Calc';\n\nexport default class Infrastructure {\n  constructor(params) {\n    const {\n      boardColumns,\n      board,\n      boardRows,\n      aiMark,\n      opponentMark,\n      aiLevel,\n      refs\n    } = params;\n\n    /** @type {string[][]} */\n    this.board = board || _.range(boardColumns).map(i => []);\n    /** @type {number} */\n    this.maxHeight = boardRows;\n    /** @type {string} */\n    this.mark = aiMark;\n    /** @type {string} */\n    this.opponentMark = opponentMark;\n    /** @type {number} */\n    this.aiLevel = aiLevel;\n\n    if (refs) {\n      Object.assign(this, refs);\n    } else {\n      const series = Calc.formSeries(this.board.length, this.maxHeight);\n\n      const basicCounter = { [this.mark]: 0, [this.opponentMark]: 0 };\n      const markCountersBySeries = new Map(\n        series.map(series => [\n          series,\n          Object.assign(\n            {},\n            basicCounter,\n            _.countBy(series, c => this.board[c.x][c.y])\n          )\n        ])\n      );\n\n      this.series = series.map(series => markCountersBySeries.get(series));\n\n      this.seriesByCell = _.range(4)\n        .map(i => _.groupBy(series, series => Calc.stringifyCell(series[i])))\n        .map(group =>\n          _.fromPairs(\n            _.toPairs(group).map(([key, seriesArr]) => [\n              key,\n              seriesArr.map(series => markCountersBySeries.get(series))\n            ])\n          )\n        )\n        .reduce((unitedMapByCell, currMapByCell) => {\n          Object.keys(currMapByCell).forEach(key => {\n            if (key in unitedMapByCell) {\n              unitedMapByCell[key].push(...currMapByCell[key]);\n            } else {\n              unitedMapByCell[key] = currMapByCell[key];\n            }\n          });\n          return unitedMapByCell;\n        }, {});\n    }\n\n    this.factor = n => n ** this.board.length * this.series.length * 4;\n  }\n\n  /** @param {number} col */\n  appendToColumn(col, mark) {\n    this.board[col].push(mark);\n    this.lastColumn = col;\n    this.seriesByCell[Calc.getLastCellAsString(this.board, col)].forEach(\n      counterByMark => counterByMark[mark]++\n    );\n  }\n\n  /** @param {number} col */\n  removeFromColumn(col, mark) {\n    this.seriesByCell[Calc.getLastCellAsString(this.board, col)].forEach(\n      counterByMark => counterByMark[mark]--\n    );\n    this.board[col].pop();\n  }\n\n  isTie() {\n    return this.board.every(col => col.length === this.maxHeight);\n  }\n\n  won(lastCell) {\n    return this.wonByMark(lastCell, this.mark);\n  }\n  lost(lastCell) {\n    return this.wonByMark(lastCell, this.opponentMark);\n  }\n\n  wonByMark(lastCell, mark) {\n    if (lastCell) {\n      return this.seriesByCell[lastCell].some(\n        counterByMark => counterByMark[mark] === 4\n      );\n    } else {\n      return this.series.some(counterByMark => counterByMark[mark] === 4);\n    }\n  }\n\n  wrapFillColumnTemp(i, mark, fn) {\n    if (this.board[i].length === this.maxHeight) {\n      return 0;\n    }\n    this.appendToColumn(i, mark);\n    const res = fn();\n    this.removeFromColumn(i, mark);\n    return res;\n  }\n\n  toggleMark(mark) {\n    return mark === this.mark ? this.opponentMark : this.mark;\n  }\n}\n","export const PlayerType = {\n  AI: 1,\n  HUMAN: 2\n};\n","const fontPixels = 5;\nexport const uiConstants = {\n  messageBoxHeightArithmetic: `${fontPixels + 5}px + 2vmin`,\n  messageBoxFontArithmetic: `${fontPixels}px + 2vmin`\n};\n","import React from 'react';\nimport Engine from './engine';\nimport _ from 'lodash';\nimport { PlayerType } from '../enums';\nimport { uiConstants } from '../common';\nimport styled from 'styled-components/macro';\n\nconst padding = 10;\n\nstyled.div`\n  width: calc(100% - ${padding * 2}px),\n  height: calc(100% - ${padding * 2}px - (${\n  uiConstants.messageBoxHeightArithmetic\n})),\n  backgroundColor: #7f7878,\n  display: grid,\n  gridTemplateColumns: repeat(7, 1fr),\n  gridTemplateRows: repeat(7, 1fr),\n  gridRowGap: 10,\n  gridColumnGap: 10,\n  padding: ${padding}\n`;\n\nconst Player = {\n  FIRST: 1,\n  SECOND: 2\n};\n\ntype Props = {\n  meta: {\n    first: { type: Number, level?: Number },\n    second: { type: Number, level?: Number }\n  },\n  board: String[][]\n};\n\nexport default class Board extends React.Component<Props> {\n  state = { currentPlayer: Player.FIRST };\n\n  constructor(props) {\n    super(props);\n    this.setup();\n  }\n\n  setup() {\n    const { meta, board } = this.props;\n    this.firstMark = 'x';\n    this.secondMark = 'o';\n\n    this.meta = meta;\n\n    const basicInfo = {\n      board: board || _.range(7).map(i => []),\n      boardColumns: 7,\n      boardRows: 6\n    };\n    this.engineFirst = new Engine({\n      ...basicInfo,\n      opponentMark: this.secondMark,\n      aiMark: this.firstMark,\n      aiLevel: meta.first.level\n    });\n    this.engineSecond = new Engine({\n      ...basicInfo,\n      opponentMark: this.firstMark,\n      aiMark: this.secondMark,\n      aiLevel: meta.second.level,\n      refs: {\n        series: this.engineFirst.series,\n        seriesByCell: this.engineFirst.seriesByCell\n      }\n    });\n\n    window.engine = this.engineSecond;\n    window._ = _;\n    window.userSteps = this.userSteps = [];\n\n    this.height = basicInfo.boardRows;\n    this.board = this.engineFirst.board;\n    this.width = basicInfo.boardColumns;\n    // eslint-disable-next-line react/no-direct-mutation-state\n    this.state = { currentPlayer: Player.FIRST };\n  }\n\n  render() {\n    if (this.meta !== this.props.meta) {\n      this.restart();\n    }\n\n    let isGameOver = false;\n    if (this.currentEngine.lost()) {\n      console.log(`Player ${this.nextPlayer()} Won!`);\n      isGameOver = true;\n    } else if (this.currentEngine.isTie()) {\n      console.log(`It's a Tie!`);\n      isGameOver = true;\n    } else if (this.isCurrentPlayerType(PlayerType.AI)) {\n      setTimeout(() => {\n        this.currentEngine.takeStep();\n        this.setState({ currentPlayer: this.nextPlayer() });\n        this.props.onMessage(this.nextEngine.message);\n      }, 0);\n    }\n\n    return (\n      <div\n        style={{\n          width: 'calc(100% - 20px)', // 100% - padding\n          height: 'calc(100% - 20px - 15px - 2vmin)', // 100% - padding - top dock\n          backgroundColor: '#7f7878',\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          gridTemplateRows: 'repeat(7, 1fr)',\n          gridRowGap: 10,\n          gridColumnGap: 10,\n          padding: 10\n        }}\n      >\n        {_.rangeRight(this.height)\n          .map(i => this.board.map(col => Cell(col[i])))\n          .flat()}\n        {_.range(this.width).map(i =>\n          this.button(i, isGameOver, this.nextEngine.lastColumn === i)\n        )}\n      </div>\n    );\n  }\n\n  restart() {\n    this.setup();\n  }\n\n  isCurrentPlayerType(n) {\n    const { currentPlayer } = this.state;\n\n    return currentPlayer === Player.FIRST\n      ? this.meta.first.type === n\n      : this.meta.second.type === n;\n  }\n\n  get currentEngine() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST\n      ? this.engineFirst\n      : this.engineSecond;\n  }\n\n  get nextEngine() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST\n      ? this.engineSecond\n      : this.engineFirst;\n  }\n\n  get currentMark() {\n    const { currentPlayer } = this.state;\n    return currentPlayer === Player.FIRST ? this.firstMark : this.secondMark;\n  }\n\n  button(i, isGameOver, isLastColumn) {\n    const currentColor = this.currentMark === 'x' ? 'blue' : 'red';\n\n    return (\n      <button\n        style={{\n          borderRadius: '10px',\n          background: isGameOver\n            ? `repeating-linear-gradient(45deg, black, ${currentColor} 100%)`\n            : isLastColumn\n            ? `repeating-linear-gradient(45deg, ${currentColor}, transparent 100%)`\n            : 'repeating-linear-gradient(45deg, black, transparent 100%)',\n          color: 'white',\n          fontWeight: 'bold',\n          fontSize: '2.7vw'\n        }}\n        key={i}\n        onClick={() => {\n          if (!isGameOver && this.board[i].length < this.height) {\n            if (this.isCurrentPlayerType(PlayerType.HUMAN)) {\n              this.userSteps.push(i);\n              this.currentEngine.appendToColumn(i, this.currentMark);\n              this.setState({ currentPlayer: this.nextPlayer() });\n            }\n          }\n        }}\n      >\n        {i + 1}\n      </button>\n    );\n  }\n\n  nextPlayer() {\n    return 3 - this.state.currentPlayer;\n  }\n}\n\nfunction Cell(mark) {\n  const color = mark === 'x' ? 'red' : 'blue';\n  return (\n    <div\n      key={_.random(1e9)}\n      style={{\n        border: mark ? `0.9vw solid ${color}` : 'none',\n        borderRadius: '100%',\n        background: mark\n          ? mark === 'x'\n            ? `radial-gradient(circle, red 60%,transparent 100%)`\n            : `radial-gradient(circle, blue 60%, violet 90%)`\n          : 'gray'\n      }}\n    ></div>\n  );\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { PlayerType } from '../enums';\n\nconst options = [\n  { value: PlayerType.HUMAN, label: 'Human' },\n  { value: PlayerType.AI, label: 'AI' }\n];\n\nconst DEFAULT_LEVEL = 7;\n\nfunction TextDiv({ children }) {\n  return <div style={{ minWidth: 120 }}>{children}</div>;\n}\nfunction ComponentDiv({ children }) {\n  return <div style={{ minWidth: 200, color: 'black' }}>{children}</div>;\n}\nfunction FlexDiv({ children }) {\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n  );\n}\n\ntype PlayerMeta = {\n  type: Number,\n  level: Number\n};\n\ntype Props = {\n  data: PlayerMeta,\n  turn: String,\n  onChange: (data: PlayerMeta) => void\n};\n\nexport default function PlayerData({ data, turn, onChange }: Props) {\n  const currVal = options.find(option => option.value === data.type);\n  return (\n    <div\n      style={{\n        textAlign: 'left',\n        padding: 20,\n        fontFamily: 'arial'\n      }}\n    >\n      <FlexDiv>\n        <TextDiv>\n          <span>{turn + ' Player:'}</span>\n        </TextDiv>\n        <ComponentDiv>\n          <Select\n            // theme={theme => ({\n            //   ...(console.log(theme) || theme),\n            //   // borderRadius: 0,\n            //   colors: {\n            //     ...Object.fromEntries(\n            //       Object.entries(theme.colors).map(([k, v]) => [k, '#7f7878'])\n            //     ),\n            //     text: 'white',\n            //     primary: '#7f7878',\n            //     primary25: '#7f7878'\n            //   }\n            // })}\n            value={currVal}\n            onChange={type =>\n              onChange({ type: type.value, level: data.level || DEFAULT_LEVEL })\n            }\n            options={options}\n          />\n        </ComponentDiv>\n      </FlexDiv>\n      {currVal.value === PlayerType.AI && (\n        <div style={{ paddingTop: 10 }}>\n          <FlexDiv>\n            <TextDiv>\n              <label>Level: </label>\n            </TextDiv>\n            <ComponentDiv>\n              <Slider\n                // style={{ backgroundColor: '#7f7878', color: 'white' }}\n                min={1}\n                max={8}\n                value={data.level || DEFAULT_LEVEL}\n                dots={true}\n                onChange={level => onChange({ type: data.type, level })}\n              />\n            </ComponentDiv>\n          </FlexDiv>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PlayerData from './PlayerData';\n\nexport default class Meta extends React.Component {\n  constructor(props) {\n    super(props);\n    const { first, second } = this.props;\n    this.state = {\n      first,\n      second\n    };\n  }\n\n  render() {\n    const { first, second } = this.state;\n    const { onChange, onRestart } = this.props;\n\n    return (\n      <div\n        style={{\n          margin: 20,\n          backgroundColor: '#7f7878',\n          display: 'grid',\n          gridTemplateColumns: 'min-content',\n          borderRadius: '30px',\n          color: 'white',\n          fontWeight: 'bold'\n        }}\n      >\n        <PlayerData\n          data={first}\n          turn={'First'}\n          onChange={first =>\n            this.setState({ ...this.state, first }) &&\n            onChange({ first, second })\n          }\n        />\n        <PlayerData\n          data={second}\n          turn={'Second'}\n          onChange={second =>\n            this.setState({ ...this.state, second }) &&\n            onChange({ first, second })\n          }\n        />\n\n        <button\n          style={{\n            margin: 20,\n            paddingTop: 10,\n            paddingBottom: 10,\n            fontSize: 25,\n            fontFamily: 'arial',\n            fontWeight: 'bold',\n            color: 'white',\n            background:\n              'repeating-linear-gradient(45deg, transparent, black, transparent 100%)',\n            borderRadius: 15\n          }}\n          onClick={() => onRestart({ ...this.state })}\n        >\n          Restart\n        </button>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components/macro';\nimport { uiConstants } from './common';\n\nexport const PlayGameContianer = styled.div`\n  text-align: center;\n  margin: auto;\n  background-color: #282c34;\n  min-height: 100vh;\n  max-height: 100vh;\n  min-width: 100vw;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst [width, minWidth, maxWidth] = ['40vmax', '300px', '600px'];\nexport const MessageAndBoardContainer = styled.div`\n  width: ${width};\n  height: calc(${width} + ${uiConstants.messageBoxHeightArithmetic});\n  min-width: ${minWidth};\n  min-height: calc(${minWidth} + ${uiConstants.messageBoxHeightArithmetic});\n  max-width: ${maxWidth};\n  max-height: calc(${maxWidth} + ${uiConstants.messageBoxHeightArithmetic});\n  padding: 10px;\n`;\n\nexport const MessageBox = styled.div`\n  padding: 10px 0;\n  width: 100%;\n  font-size: calc(${uiConstants.messageBoxFontArithmetic});\n  min-height: calc(${uiConstants.messageBoxHeightArithmetic});\n`;\n\nexport const Message = styled.p`\n  margin: 0 0;\n  color: white;\n  font-weight: bold;\n  min-height: calc(${uiConstants.messageBoxFontArithmetic});\n`;\n","import React from 'react';\n\nimport Board from './Board';\nimport Meta from './Meta';\nimport { PlayerType } from './enums';\n\nimport {\n  PlayGameContianer,\n  MessageAndBoardContainer,\n  MessageBox,\n  Message\n} from './PlayGameStyled';\n\nexport default class GamePlay extends React.Component {\n  state = {\n    meta: {\n      first: { type: PlayerType.HUMAN },\n      second: { type: PlayerType.AI, level: 7 }\n    },\n    message: ''\n  };\n\n  render() {\n    const { message, meta } = this.state;\n\n    return (\n      <PlayGameContianer>\n        <MessageAndBoardContainer>\n          <MessageBox>\n            <Message>{message}</Message>\n          </MessageBox>\n          <Board\n            meta={meta}\n            onMessage={message =>\n              this.atLeastOneHumanPlayer() &&\n              this.setState({ ...this.state, message })\n            }\n          />\n        </MessageAndBoardContainer>\n        <Meta\n          first={meta.first}\n          second={meta.second}\n          onChange={meta => {}}\n          onRestart={meta => this.setState({ meta, message: null })}\n        />\n      </PlayGameContianer>\n    );\n  }\n\n  atLeastOneHumanPlayer() {\n    const { first, second } = this.state.meta;\n    return first.type === PlayerType.HUMAN || second.type === PlayerType.HUMAN;\n  }\n}\n","import React from 'react';\nimport GamePlay from './GamePlay';\n\nfunction App() {\n  return <GamePlay />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}